# Generated by Django 3.2.4 on 2021-06-06 05:09

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("taxonomy", "__first__"),
    ]

    operations = [
        migrations.CreateModel(
            name="Crop",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("description", models.TextField(blank=True, null=True)),
                ("organic", models.BooleanField(blank=True, null=True)),
                ("treated", models.BooleanField(blank=True, null=True)),
                ("hybrid", models.BooleanField(blank=True, null=True)),
                (
                    "species",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="taxonomy.species",
                    ),
                ),
            ],
            options={
                "db_table": "crop",
                "unique_together": {("id", "species")},
            },
        ),
        migrations.CreateModel(
            name="Planting",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "soilTemperatureMin",
                    models.SmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(-50),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "soilTemperatureMax",
                    models.SmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(-50),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "germinationStart",
                    models.SmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(365),
                        ],
                    ),
                ),
                (
                    "germinationEnd",
                    models.SmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(365),
                        ],
                    ),
                ),
                (
                    "depth",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1000),
                        ],
                    ),
                ),
                (
                    "crop",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="crop.crop"
                    ),
                ),
            ],
            options={
                "db_table": "planting",
            },
        ),
        migrations.CreateModel(
            name="PlantingDate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "frost",
                    models.CharField(
                        choices=[("F", "First frost"), ("L", "Last frost")],
                        default="L",
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "date",
                    models.SmallIntegerField(
                        blank=True,
                        default=1,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(-180),
                            django.core.validators.MaxValueValidator(180),
                        ],
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        choices=[("I", "Start inside"), ("O", "Direct sow")],
                        default="I",
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "transplant",
                    models.SmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(52),
                        ],
                    ),
                ),
                (
                    "planting",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="crop.planting",
                    ),
                ),
            ],
            options={
                "db_table": "plantingdate",
            },
        ),
        migrations.CreateModel(
            name="Harvest",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "begin",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "end",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "variety",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("R", "Root"),
                            ("G", "Leafy green"),
                            ("F", "Fruit"),
                            ("N", "Nut"),
                            ("S", "Seed"),
                        ],
                        default="F",
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "crop",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="crop.crop"
                    ),
                ),
            ],
            options={
                "db_table": "harvest",
            },
        ),
        migrations.CreateModel(
            name="CropCare",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sunMin",
                    models.SmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(24),
                        ],
                    ),
                ),
                (
                    "sunMax",
                    models.SmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(24),
                        ],
                    ),
                ),
                ("soil", models.CharField(blank=True, max_length=30, null=True)),
                (
                    "water",
                    models.SmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("frostHardy", models.BooleanField(blank=True, null=True)),
                (
                    "crop",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="crop.crop"
                    ),
                ),
            ],
            options={
                "db_table": "cropcare",
            },
        ),
    ]
